import cv2
import numpy as np
import matplotlib.pyplot as plt

class Utilities:



    @staticmethod
    def connectedComponents(fgmask, original, connectivity=4):
        font = cv2.FONT_HERSHEY_SIMPLEX
        global labels


        output = cv2.connectedComponentsWithStats(fgmask, connectivity, cv2.CV_32S)

        num_labels = output[0]
        labels = output[1]
        stats = output[2]
        centroids = output[3]

        fgmask = cv2.cvtColor(fgmask, cv2.COLOR_GRAY2BGR)

        j = 0
        for i in range(1, num_labels):  # don't do 0, cause it's just the background
            if stats[i, 4] > 2500:  # threshold to filter out small patches
                j += 1
                cv2.putText(original,str(i),(int(centroids[i,0]),int(centroids[i,1])), font, 1,(0,255,0),2,cv2.LINE_AA)###here i changed j to i in order to get the same number for the bee as in labels!!!
                cv2.ellipse(original, (int(centroids[i, 0]), int(centroids[i, 1])), (stats[i, 2] // 3, stats[i, 3] // 3), 0, 0, 360, 255, 2)

        return labels





    @staticmethod
    def defineROI(xMin, xMax, yMin, yMax, img):
        ROI=img[yMin: yMax, xMin:xMax]
        return ROI




    @staticmethod
    def getHistogram(realoriginal, label, blueArray, greenArray, redArray,frame):
        shadowPixels = []

        #get shadows
        for i, j in np.ndindex(labels.shape):
            if labels[i,j]==label:
                shadowPixels.append(realoriginal[i,j])
        shadowPixels=np.matrix(shadowPixels)

        shadowBlue = shadowPixels[:,0]
        shadowGreen = shadowPixels[:,1]
        shadowRed = shadowPixels[:,2]

        fig1 =plt.hist(shadowBlue,range=(0,255), normed=True, bins=255)

        # print(fig[0])
        # plt.show()
        blueArray+=fig1[0]
        # plt.savefig('/home/philipp/Desktop/Histograms_shadows/shadwo_frame_'+str(frame)+'_label'+str(label)+'_blue')
        fig2=plt.hist(shadowGreen,range=(0,255), normed=True, bins=255)
        greenArray+=fig2[0]
        # plt.show()
        # plt.savefig('/home/philipp/Desktop/Histograms_shadows/shadwo_frame_'+str(frame)+'_label'+str(label)+'_green')
        fig3=plt.hist(shadowRed,range=(0,255), normed=True, bins=255)
        redArray+=fig3[0]
        # plt.show()
        # plt.savefig('/home/philipp/Desktop/Histograms_bees/bee_frame'+str(frame)+'_label'+str(label)+'_red_or_ALL')
        return (blueArray, greenArray, redArray)





    @staticmethod
    def showCaughtPatch(realoriginal, labels, labelNumber):
        for i, j in np.ndindex(labels.shape):
            if labels[i,j]!= labelNumber:
                realoriginal[i,j]=(0,0,0)

    @staticmethod
    def defineStaticArrays(blueArray_static, greenArray_static, redArray_static):
        blueArray_static=[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.00044077, 0.00121212, 0.00132231, 0.00209366, 0.00187328, 0.00165289, 0.00187328, 0.00198347, 0.00264463, 0.00231405, 0.00385675, 0.00385675, 0.00407713, 0.00506887, 0.00440771, 0.00429752, 0.00539945, 0.00539945, 0.00782369, 0.00694215, 0.00716253, 0.00694215, 0.00569309, 0.00661036, 0.00719341, 0.00924167, 0.01448309, 0.01674749, 0.01696446, 0.02425708, 0.02643759, 0.03607731, 0.03232526, 0.01944819, 0.01604769, 0.01505952, 0.01211128, 0.00989425, 0.0092141, 0.00917404, 0.00741223, 0.0074085, 0.00692784, 0.00668305, 0.00536894, 0.00547039, 0.0052576, 0.0052937, 0.00630072, 0.00513054, 0.0050765, 0.00497468, 0.00528321, 0.0055077, 0.00583092, 0.00573561, 0.00510789, 0.00652605, 0.0059731, 0.00491547, 0.00594316, 0.00575591, 0.00494625, 0.00511306, 0.00535852, 0.00529279, 0.00571151, 0.00603093, 0.00683427, 0.00685289, 0.00514687, 0.02769323, 0.0239901, 0.07851035, 0.02624519, 0.04232227, 0.01836436, 0.01325456, 0.00883328, 0.00209245, 0.00467366, 0.00405004, 0.00044077, 0.00055096, 0.00018345, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]
        greenArray_static=[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.00011019, 0.00066116, 0.00121212, 0.00209366, 0.00165289, 0.0015427, 0.00209366, 0.00286501, 0.00396694, 0.0046281, 0.00506887, 0.00451791, 0.00440771, 0.0046281, 0.00484848, 0.00550964, 0.0077135, 0.0061708, 0.00595041, 0.00661157, 0.00738292, 0.00705234, 0.00639118, 0.00440771, 0.00473829, 0.00286501, 0.0035625, 0.00769715, 0.01692732, 0.0166706, 0.0193455, 0.01396058, 0.01096489, 0.00877089, 0.01564287, 0.02768156, 0.0246826, 0.02084125, 0.01807151, 0.01995279, 0.01279363, 0.01103372, 0.00793014, 0.00755654, 0.00599112, 0.00603124, 0.0053469, 0.00599233, 0.00652383, 0.0052367, 0.00456566, 0.00416942, 0.00564571, 0.00530388, 0.0046526, 0.00403362, 0.00468483, 0.0043604, 0.00508174, 0.00537334, 0.00561789, 0.00498577, 0.00423865, 0.00483172, 0.00536696, 0.00572573, 0.00609264, 0.00448746, 0.00584923, 0.0053187, 0.00553999, 0.00551499, 0.00540123, 0.00652238, 0.00557396, 0.00806189, 0.00851634, 0.00800946, 0.02763425, 0.03627332, 0.07866258, 0.03168948, 0.03990936, 0.01614242, 0.00537245, 0.00095238, 0.00058608, 0.00021978, 0.00029304, 0.00029304, 0.00014652, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]
        redArray_static[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.00011019, 0.00077135, 0.00077135, 0.00187328, 0.00198347, 0.00165289, 0.00176309, 0.0030854, 0.00231405, 0.00407713, 0.00506887, 0.00374656, 0.00473829, 0.00506887, 0.00407713, 0.00506887, 0.00550964, 0.00760331, 0.00650138, 0.00628099, 0.00749311, 0.00672176, 0.00705234, 0.00595041, 0.00407713, 0.00451791, 0.0030854, 0.00315866, 0.00176127, 0.01183544, 0.02194593, 0.01854085, 0.01480892, 0.01401111, 0.01614733, 0.03240505, 0.02969719, 0.02206, 0.01970269, 0.01766121, 0.0115416, 0.01000855, 0.00859959, 0.00710034, 0.00662287, 0.00505561, 0.0062403, 0.00583707, 0.00776052, 0.00514778, 0.00358532, 0.00492444, 0.00557245, 0.00566319, 0.00436914, 0.00420833, 0.00471857, 0.00454089, 0.0056062, 0.00595661, 0.00567892, 0.00587598, 0.00379674, 0.00520911, 0.00534948, 0.00566874, 0.00556933, 0.00469273, 0.00587165, 0.00494709, 0.00587316, 0.00569289, 0.00628392, 0.00661769, 0.00617235, 0.00750454, 0.00833433, 0.0282942, 0.02362, 0.0861066, 0.0317445, 0.03879699, 0.02321262, 0.00901926, 0.00098931, 0.00043956, 0.00043956, 0.00029304, 0.00014652, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]
        return (blueArray_static, greenArray_static, redArray_static)

